name: Go Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23.x']
        platform: ['linux/amd64', 'linux/arm64']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: |
        GOOS=${platform%/*} GOARCH=${platform#*/} go build -v ./...
      env:
        platform: ${{ matrix.platform }}

    - name: Run go vet
      run: go vet ./...

    - name: Check for race conditions
      run: go build -race ./...

    - name: Check if binaries can be built without CGO
      run: |
        CGO_ENABLED=0 GOOS=${platform%/*} GOARCH=${platform#*/} go build -v ./...
      env:
        platform: ${{ matrix.platform }}

    # Optional: Create and upload artifacts
    - name: Build binary
      if: matrix.platform == 'linux/amd64' # Only build artifacts for amd64
      run: |
        CGO_ENABLED=0 go build -v -o silverlight ./cmd/...

    - name: Upload binary
      if: matrix.platform == 'linux/amd64'
      uses: actions/upload-artifact@v3
      with:
        name: silverlight-linux-amd64
        path: silverlight
